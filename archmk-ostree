#!/usr/bin/bash

set -e
set -x

base_dir="$(pwd)"
out_dir="$base_dir"/out
work_dir="$base_dir"/work
conf_dir="$base_dir"/conf
os_dir="$work_dir"/os
ostree_dir="$out_dir"/ostree
image_path="$out_dir"/ostree.img

. "$conf_dir"/archmk.conf

arch-chroot "$os_dir" mkinitcpio -c /etc/ostree-mkinitcpio.conf \
    -g /boot/initramfs-linux.img

mkdir -p "$os_dir"/sysroot

boot_dir="$os_dir"/boot

checksum=$(cat "$boot_dir"/initramfs-linux.img "$boot_dir"/vmlinuz-linux | \
           sha256sum | cut -d' ' -f 1)

mv "$boot_dir"/initramfs-linux.img "$boot_dir"/initramfs-$checksum
mv "$boot_dir"/vmlinuz-linux "$boot_dir"/vmlinuz-$checksum

if [ ! -d "$ostree_dir" ]; then
    ostree --repo="$ostree_dir" init
fi

ostree --repo="$ostree_dir" commit --tree=dir="$os_dir" --branch=master \
    --subject "Update"

rm -f "$image_path"
truncate -s 5GB "$image_path"

parted "$image_path" mklabel msdos
parted "$image_path" mkpart primary ext4 0% 10%
parted "$image_path" mkpart primary ext4 10% 100%
parted "$image_path" set 1 boot on

modprobe loop

losetup /dev/loop0 "$image_path" -o $((2048 * 512)) \
    --sizelimit $((523264 * 512))
losetup /dev/loop1 "$image_path" -o $((1048576 * 512)) \
    --sizelimit $((4718592 * 512))

sysroot=/mnt

mkfs.ext4 /dev/loop0
mkfs.ext4 /dev/loop1

e2label /dev/loop1 $OSNAME

mount /dev/loop1 "$sysroot"
mkdir -p "$sysroot"/boot
mount /dev/loop0 "$sysroot"/boot

mkdir "$sysroot"/boot/loader.0
touch "$sysroot"/boot/loader.0/syslinux.cfg
ln -s loader.0 "$sysroot"/boot/loader

mkdir "$sysroot"/boot/syslinux
ln -s ../loader/syslinux.cfg "$sysroot"/boot/syslinux/syslinux.cfg

ostree admin --sysroot="$sysroot" os-init $OSNAME

ostree --repo="$sysroot"/ostree/repo pull-local "$ostree_dir" master

ostree admin --sysroot="$sysroot" \
    deploy master --karg=root=LABEL=$OSNAME --os=$OSNAME

extlinux -i "$sysroot"

umount /mnt/boot
umount /mnt

dd bs=440 count=1 conv=notrunc if=/usr/lib/syslinux/bios/mbr.bin of=/dev/loop0

losetup -d /dev/loop0
losetup -d /dev/loop1
